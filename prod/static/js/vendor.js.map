{"version":3,"sources":["swiper.js"],"names":["global","factory","exports","module","define","amd","self","Swiper","this","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","arr","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments$1","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","assign","args","len","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event$1","dom7LiveListeners","proxyListener","event","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","toAdd","Object","keys","forEach","methodName","SwiperClass","params","eventsListeners","eventName","testDiv","ua","Utils","deleteProps","obj","object","nextTick","delay","now","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","parseUrlQuery","url","param","query","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","extend","len$1","to","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","enumerable","Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","get","gestures","Browser","isIE","isEdge","isSafari","toLowerCase","isUiWebView","test","staticAccessors","components","configurable","priority","method","once","onceHandler","f7proxy","eventHandler","emit","Array","isArray","slice","useModulesParams","instanceParams","instance","modules","moduleName","useModules","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","set","use","installModule","name","proto","static","install","m","concat","defineProperties","update","updateSize","width","height","swiper","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtl","rtlTranslate","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","slidesNumberEvenToRows","slideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","newSlidesGrid","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","boxSizing$1","swiperSlideSize","centeredSlides","abs","slidesPerGroup","effect","setWrapperSize","i$1","slidesGridItem","i$2","slidesGridItem$1","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","activeSlide","realIndex","slideActiveClass","loop","slideDuplicateClass","slideDuplicateActiveClass","nextSlide","slideNextClass","prevSlide","slidePrevClass","slideDuplicateNextClass","slideDuplicatePrevClass","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","x","y","previousTranslate","transition$1","transitionStart","runCallbacks","direction","autoHeight","dir","animating","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","prevIndex","normalizedTranslate","normalizedSnapGrid","prevSnap","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","slideClass","slideBlankClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","pow","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","currentPos","touchEndTime","timeDiff","lastClickTime","clickTimeout","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","needsLoopFix","doBounce","bounceAmount","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","prototypeGroup","protoMethod","moduleParamName","swiperParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","__proto__","spv","breakLoop","translateValue","newDirection","needUpdate","currentDirection","slideEl","destroy","deleteInstance","cleanStyles","extendDefaults","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","attach","options","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","observeSlideChildren","disconnect","Observer$1","Virtual","force","ref","ref$1","addSlidesBefore","addSlidesAfter","ref$2","previousFrom","from","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","enable","disable","Keyboard$1","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onPrevClick","onNextClick","nextEl","prevEl","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bullet","$bullet","bulletIndex","bulletActiveClass","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","formatFractionCurrent","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","renderCustom","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","renderFraction","currentClass","totalClass","renderProgressbar","progressbarFillClass","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","setDragPosition","positionRatio","clientX","clientY","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragEl","draggable","Parallax","setTransform","p","currentOpacity","currentScale","parallax","parallaxEl","$parallaxEl","parallaxDuration","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","maxRatio","isScaling","onGestureChange","scaleMove","minRatio","onGestureEnd","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","touchX","touchY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","slideOriginalIndex","originalSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","guess","i1","i3","binarySearch","array","interpolate","getInterpolateFunction","c","controller","spline","setTranslate$1","multiplier","controlledTranslate","controlled","control","setControlledTranslate","by","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","onEnterKey","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","setHistory","slugify","includes","currentState","state","HashNavigation","onHashCange","newHash","setHash","watchState","Autoplay","run","$activeSlideEl","reverseDirection","stopOnLastSlide","running","pause","paused","waitForTransition","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","$cubeShadowEl","swiperWidth","swiperHeight","cubeEffect","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowAngle","sin","cos","scale1","shadowScale","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbsParams","thumbs","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","toEdge","fromEdge","isHidden","bulletElement","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","dragClass","containerClass","zoomedSlideClass","touchStart","touchEnd","doubleTap","loadOnTransitionStart","preloaderClass","scroll","scrollbarDragMove","notificationClass","paginationUpdate","disableOnInteraction","beforeTransitionStart","sliderFirstMove","slideChange","beforeDestroy"],"mappings":"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","file":"vendor.js","sourcesContent":["/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Swiper = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * SSR Window 1.0.1\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2018, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: July 18, 2018\n   */\n  var doc = (typeof document === 'undefined') ? {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: '',\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {},\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        },\n      };\n    },\n    location: { hash: '' },\n  } : document; // eslint-disable-line\n\n  var win = (typeof window === 'undefined') ? {\n    document: doc,\n    navigator: {\n      userAgent: '',\n    },\n    location: {},\n    history: {},\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        },\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n  } : window; // eslint-disable-line\n\n  /**\n   * Dom7 2.1.3\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * http://framework7.io/docs/dom.html\n   *\n   * Copyright 2019, Vladimir Kharlampidi\n   * The iDangero.us\n   * http://www.idangero.us/\n   *\n   * Licensed under MIT\n   *\n   * Released on: February 11, 2019\n   */\n\n  var Dom7 = function Dom7(arr) {\n    var self = this;\n    // Create array-like object\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  };\n\n  function $(selector, context) {\n    var arr = [];\n    var i = 0;\n    if (selector && !context) {\n      if (selector instanceof Dom7) {\n        return selector;\n      }\n    }\n    if (selector) {\n        // String\n      if (typeof selector === 'string') {\n        var els;\n        var tempParent;\n        var html = selector.trim();\n        if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n          var toCreate = 'div';\n          if (html.indexOf('<li') === 0) { toCreate = 'ul'; }\n          if (html.indexOf('<tr') === 0) { toCreate = 'tbody'; }\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) { toCreate = 'tr'; }\n          if (html.indexOf('<tbody') === 0) { toCreate = 'table'; }\n          if (html.indexOf('<option') === 0) { toCreate = 'select'; }\n          tempParent = doc.createElement(toCreate);\n          tempParent.innerHTML = html;\n          for (i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n            // Pure ID selector\n            els = [doc.getElementById(selector.trim().split('#')[1])];\n          } else {\n            // Other selectors\n            els = (context || doc).querySelectorAll(selector.trim());\n          }\n          for (i = 0; i < els.length; i += 1) {\n            if (els[i]) { arr.push(els[i]); }\n          }\n        }\n      } else if (selector.nodeType || selector === win || selector === doc) {\n        // Node/element\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // Array of elements or instance of Dom\n        for (i = 0; i < selector.length; i += 1) {\n          arr.push(selector[i]);\n        }\n      }\n    }\n    return new Dom7(arr);\n  }\n\n  $.fn = Dom7.prototype;\n  $.Class = Dom7;\n  $.Dom7 = Dom7;\n\n  function unique(arr) {\n    var uniqueArray = [];\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) { uniqueArray.push(arr[i]); }\n    }\n    return uniqueArray;\n  }\n\n  // Classes and attributes\n  function addClass(className) {\n    if (typeof className === 'undefined') {\n      return this;\n    }\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.add(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function removeClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.remove(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function hasClass(className) {\n    if (!this[0]) { return false; }\n    return this[0].classList.contains(className);\n  }\n  function toggleClass(className) {\n    var classes = className.split(' ');\n    for (var i = 0; i < classes.length; i += 1) {\n      for (var j = 0; j < this.length; j += 1) {\n        if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') { this[j].classList.toggle(classes[i]); }\n      }\n    }\n    return this;\n  }\n  function attr(attrs, value) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) { return this[0].getAttribute(attrs); }\n      return undefined;\n    }\n\n    // Set attrs\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments$1.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n    return this;\n  }\n  function data(key, value) {\n    var el;\n    if (typeof value === 'undefined') {\n      el = this[0];\n      // Get value\n      if (el) {\n        if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n          return el.dom7ElementDataStorage[key];\n        }\n\n        var dataKey = el.getAttribute((\"data-\" + key));\n        if (dataKey) {\n          return dataKey;\n        }\n        return undefined;\n      }\n      return undefined;\n    }\n\n    // Set value\n    for (var i = 0; i < this.length; i += 1) {\n      el = this[i];\n      if (!el.dom7ElementDataStorage) { el.dom7ElementDataStorage = {}; }\n      el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n  }\n  // Transforms\n  // eslint-disable-next-line\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransform = transform;\n      elStyle.transform = transform;\n    }\n    return this;\n  }\n  function transition(duration) {\n    if (typeof duration !== 'string') {\n      duration = duration + \"ms\"; // eslint-disable-line\n    }\n    for (var i = 0; i < this.length; i += 1) {\n      var elStyle = this[i].style;\n      elStyle.webkitTransitionDuration = duration;\n      elStyle.transitionDuration = duration;\n    }\n    return this;\n  }\n  // Events\n  function on() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) { return; }\n      var eventData = e.target.dom7EventData || [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      if ($(target).is(targetSelector)) { listener.apply(target, eventData); }\n      else {\n        var parents = $(target).parents(); // eslint-disable-line\n        for (var k = 0; k < parents.length; k += 1) {\n          if ($(parents[k]).is(targetSelector)) { listener.apply(parents[k], eventData); }\n        }\n      }\n    }\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n      listener.apply(this, eventData);\n    }\n    var events = eventType.split(' ');\n    var j;\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) { el.dom7Listeners = {}; }\n          if (!el.dom7Listeners[event]) { el.dom7Listeners[event] = []; }\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent,\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var event$1 = events[j];\n          if (!el.dom7LiveListeners) { el.dom7LiveListeners = {}; }\n          if (!el.dom7LiveListeners[event$1]) { el.dom7LiveListeners[event$1] = []; }\n          el.dom7LiveListeners[event$1].push({\n            listener: listener,\n            proxyListener: handleLiveEvent,\n          });\n          el.addEventListener(event$1, handleLiveEvent, capture);\n        }\n      }\n    }\n    return this;\n  }\n  function off() {\n    var assign;\n\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n    var eventType = args[0];\n    var targetSelector = args[1];\n    var listener = args[2];\n    var capture = args[3];\n    if (typeof args[1] === 'function') {\n      (assign = args, eventType = assign[0], listener = assign[1], capture = assign[2]);\n      targetSelector = undefined;\n    }\n    if (!capture) { capture = false; }\n\n    var events = eventType.split(' ');\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = (void 0);\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n    return this;\n  }\n  function trigger() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var evt = (void 0);\n        try {\n          evt = new win.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true,\n          });\n        } catch (e) {\n          evt = doc.createEvent('Event');\n          evt.initEvent(event, true, true);\n          evt.detail = eventData;\n        }\n        // eslint-disable-next-line\n        el.dom7EventData = args.filter(function (data, dataIndex) { return dataIndex > 0; });\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n    return this;\n  }\n  function transitionEnd(callback) {\n    var events = ['webkitTransitionEnd', 'transitionend'];\n    var dom = this;\n    var i;\n    function fireCallBack(e) {\n      /* jshint validthis:true */\n      if (e.target !== this) { return; }\n      callback.call(this, e);\n      for (i = 0; i < events.length; i += 1) {\n        dom.off(events[i], fireCallBack);\n      }\n    }\n    if (callback) {\n      for (i = 0; i < events.length; i += 1) {\n        dom.on(events[i], fireCallBack);\n      }\n    }\n    return this;\n  }\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n      }\n      return this[0].offsetWidth;\n    }\n    return null;\n  }\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        // eslint-disable-next-line\n        var styles = this.styles();\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n      }\n      return this[0].offsetHeight;\n    }\n    return null;\n  }\n  function offset() {\n    if (this.length > 0) {\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = doc.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === win ? win.scrollY : el.scrollTop;\n      var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n      return {\n        top: (box.top + scrollTop) - clientTop,\n        left: (box.left + scrollLeft) - clientLeft,\n      };\n    }\n\n    return null;\n  }\n  function styles() {\n    if (this[0]) { return win.getComputedStyle(this[0], null); }\n    return {};\n  }\n  function css(props, value) {\n    var i;\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        if (this[0]) { return win.getComputedStyle(this[0], null).getPropertyValue(props); }\n      } else {\n        for (i = 0; i < this.length; i += 1) {\n          // eslint-disable-next-line\n          for (var prop in props) {\n            this[i].style[prop] = props[prop];\n          }\n        }\n        return this;\n      }\n    }\n    if (arguments.length === 2 && typeof props === 'string') {\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n      return this;\n    }\n    return this;\n  }\n  // Iterate over the collection passing elements to `callback`\n  function each(callback) {\n    // Don't bother continuing without a callback\n    if (!callback) { return this; }\n    // Iterate over the current collection\n    for (var i = 0; i < this.length; i += 1) {\n      // If the callback returns false\n      if (callback.call(this[i], i, this[i]) === false) {\n        // End the loop early\n        return this;\n      }\n    }\n    // Return `this` to allow chained DOM operations\n    return this;\n  }\n  // eslint-disable-next-line\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : undefined;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n    return this;\n  }\n  // eslint-disable-next-line\n  function text(text) {\n    if (typeof text === 'undefined') {\n      if (this[0]) {\n        return this[0].textContent.trim();\n      }\n      return null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n    return this;\n  }\n  function is(selector) {\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') { return false; }\n    if (typeof selector === 'string') {\n      if (el.matches) { return el.matches(selector); }\n      else if (el.webkitMatchesSelector) { return el.webkitMatchesSelector(selector); }\n      else if (el.msMatchesSelector) { return el.msMatchesSelector(selector); }\n\n      compareWith = $(selector);\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    } else if (selector === doc) { return el === doc; }\n    else if (selector === win) { return el === win; }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) { return true; }\n      }\n      return false;\n    }\n    return false;\n  }\n  function index() {\n    var child = this[0];\n    var i;\n    if (child) {\n      i = 0;\n      // eslint-disable-next-line\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) { i += 1; }\n      }\n      return i;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line\n  function eq(index) {\n    if (typeof index === 'undefined') { return this; }\n    var length = this.length;\n    var returnIndex;\n    if (index > length - 1) {\n      return new Dom7([]);\n    }\n    if (index < 0) {\n      returnIndex = length + index;\n      if (returnIndex < 0) { return new Dom7([]); }\n      return new Dom7([this[returnIndex]]);\n    }\n    return new Dom7([this[index]]);\n  }\n  function append() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var newChild;\n\n    for (var k = 0; k < args.length; k += 1) {\n      newChild = args[k];\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n  function prepend(newChild) {\n    var i;\n    var j;\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n    return this;\n  }\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (this[0].nextElementSibling) { return new Dom7([this[0].nextElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.nextElementSibling) {\n      var next = el.nextElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(next).is(selector)) { nextEls.push(next); }\n      } else { nextEls.push(next); }\n      el = next;\n    }\n    return new Dom7(nextEls);\n  }\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n\n      if (el.previousElementSibling) { return new Dom7([el.previousElementSibling]); }\n      return new Dom7([]);\n    }\n    return new Dom7([]);\n  }\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) { return new Dom7([]); }\n    while (el.previousElementSibling) {\n      var prev = el.previousElementSibling; // eslint-disable-line\n      if (selector) {\n        if ($(prev).is(selector)) { prevEls.push(prev); }\n      } else { prevEls.push(prev); }\n      el = prev;\n    }\n    return new Dom7(prevEls);\n  }\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) { parents.push(this[i].parentNode); }\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n    return $(unique(parents));\n  }\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var parent = this[i].parentNode; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if ($(parent).is(selector)) { parents.push(parent); }\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentNode;\n      }\n    }\n    return $(unique(parents));\n  }\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === 'undefined') {\n      return new Dom7([]);\n    }\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n    return closest;\n  }\n  function find(selector) {\n    var foundElements = [];\n    for (var i = 0; i < this.length; i += 1) {\n      var found = this[i].querySelectorAll(selector);\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n    return new Dom7(foundElements);\n  }\n  function children(selector) {\n    var children = []; // eslint-disable-line\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].childNodes;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector) {\n          if (childNodes[j].nodeType === 1) { children.push(childNodes[j]); }\n        } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n    return new Dom7(unique(children));\n  }\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) { this[i].parentNode.removeChild(this[i]); }\n    }\n    return this;\n  }\n  function add() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var dom = this;\n    var i;\n    var j;\n    for (i = 0; i < args.length; i += 1) {\n      var toAdd = $(args[i]);\n      for (j = 0; j < toAdd.length; j += 1) {\n        dom[dom.length] = toAdd[j];\n        dom.length += 1;\n      }\n    }\n    return dom;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    data: data,\n    transform: transform,\n    transition: transition,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    remove: remove,\n    add: add,\n    styles: styles,\n  };\n\n  Object.keys(Methods).forEach(function (methodName) {\n    $.fn[methodName] = Methods[methodName];\n  });\n\n  var Utils = {\n    deleteProps: function deleteProps(obj) {\n      var object = obj;\n      Object.keys(object).forEach(function (key) {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    },\n    nextTick: function nextTick(callback, delay) {\n      if ( delay === void 0 ) delay = 0;\n\n      return setTimeout(callback, delay);\n    },\n    now: function now() {\n      return Date.now();\n    },\n    getTranslate: function getTranslate(el, axis) {\n      if ( axis === void 0 ) axis = 'x';\n\n      var matrix;\n      var curTransform;\n      var transformMatrix;\n\n      var curStyle = win.getComputedStyle(el, null);\n\n      if (win.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(function (a) { return a.replace(',', '.'); }).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m41; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[12]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[4]); }\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (win.WebKitCSSMatrix) { curTransform = transformMatrix.m42; }\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) { curTransform = parseFloat(matrix[13]); }\n        // Normal Browsers\n        else { curTransform = parseFloat(matrix[5]); }\n      }\n      return curTransform || 0;\n    },\n    parseUrlQuery: function parseUrlQuery(url) {\n      var query = {};\n      var urlToParse = url || win.location.href;\n      var i;\n      var params;\n      var param;\n      var length;\n      if (typeof urlToParse === 'string' && urlToParse.length) {\n        urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n        params = urlToParse.split('&').filter(function (paramsPart) { return paramsPart !== ''; });\n        length = params.length;\n\n        for (i = 0; i < length; i += 1) {\n          param = params[i].replace(/#\\S+/g, '').split('=');\n          query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n        }\n      }\n      return query;\n    },\n    isObject: function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n    },\n    extend: function extend() {\n      var args = [], len$1 = arguments.length;\n      while ( len$1-- ) args[ len$1 ] = arguments[ len$1 ];\n\n      var to = Object(args[0]);\n      for (var i = 1; i < args.length; i += 1) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null) {\n          var keysArray = Object.keys(Object(nextSource));\n          for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            var nextKey = keysArray[nextIndex];\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                Utils.extend(to[nextKey], nextSource[nextKey]);\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    },\n  };\n\n  var Support = (function Support() {\n    var testDiv = doc.createElement('div');\n    return {\n      touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\n        return !!((win.navigator.maxTouchPoints > 0) || ('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\n      }()),\n\n      pointerEvents: !!(win.navigator.pointerEnabled || win.PointerEvent || ('maxTouchPoints' in win.navigator && win.navigator.maxTouchPoints > 0)),\n      prefixedPointerEvents: !!win.navigator.msPointerEnabled,\n\n      transition: (function checkTransition() {\n        var style = testDiv.style;\n        return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n      }()),\n      transforms3d: (win.Modernizr && win.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n        var style = testDiv.style;\n        return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n      }()),\n\n      flexbox: (function checkFlexbox() {\n        var style = testDiv.style;\n        var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n        for (var i = 0; i < styles.length; i += 1) {\n          if (styles[i] in style) { return true; }\n        }\n        return false;\n      }()),\n\n      observer: (function checkObserver() {\n        return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\n      }()),\n\n      passiveListener: (function checkPassiveListener() {\n        var supportsPassive = false;\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            },\n          });\n          win.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {\n          // No support\n        }\n        return supportsPassive;\n      }()),\n\n      gestures: (function checkGestures() {\n        return 'ongesturestart' in win;\n      }()),\n    };\n  }());\n\n  var Browser = (function Browser() {\n    function isSafari() {\n      var ua = win.navigator.userAgent.toLowerCase();\n      return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n    }\n    return {\n      isIE: !!win.navigator.userAgent.match(/Trident/g) || !!win.navigator.userAgent.match(/MSIE/g),\n      isEdge: !!win.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\n    };\n  }());\n\n  var SwiperClass = function SwiperClass(params) {\n    if ( params === void 0 ) params = {};\n\n    var self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach(function (eventName) {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  };\n\n  var staticAccessors = { components: { configurable: true } };\n\n  SwiperClass.prototype.on = function on (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    var method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(function (event) {\n      if (!self.eventsListeners[event]) { self.eventsListeners[event] = []; }\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.once = function once (events, handler, priority) {\n    var self = this;\n    if (typeof handler !== 'function') { return self; }\n    function onceHandler() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  };\n\n  SwiperClass.prototype.off = function off (events, handler) {\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    events.split(' ').forEach(function (event) {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach(function (eventHandler, index) {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.emit = function emit () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n    var self = this;\n    if (!self.eventsListeners) { return self; }\n    var events;\n    var data;\n    var context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    var eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(function (event) {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        var handlers = [];\n        self.eventsListeners[event].forEach(function (eventHandler) {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach(function (eventHandler) {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  };\n\n  SwiperClass.prototype.useModulesParams = function useModulesParams (instanceParams) {\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  };\n\n  SwiperClass.prototype.useModules = function useModules (modulesParams) {\n      if ( modulesParams === void 0 ) modulesParams = {};\n\n    var instance = this;\n    if (!instance.modules) { return; }\n    Object.keys(instance.modules).forEach(function (moduleName) {\n      var module = instance.modules[moduleName];\n      var moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach(function (modulePropName) {\n          var moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach(function (moduleEventName) {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  };\n\n  staticAccessors.components.set = function (components) {\n    var Class = this;\n    if (!Class.use) { return; }\n    Class.use(components);\n  };\n\n  SwiperClass.installModule = function installModule (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (!Class.prototype.modules) { Class.prototype.modules = {}; }\n    var name = module.name || (((Object.keys(Class.prototype.modules).length) + \"_\" + (Utils.now())));\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach(function (key) {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach(function (key) {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  };\n\n  SwiperClass.use = function use (module) {\n      var params = [], len = arguments.length - 1;\n      while ( len-- > 0 ) params[ len ] = arguments[ len + 1 ];\n\n    var Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(function (m) { return Class.installModule(m); });\n      return Class;\n    }\n    return Class.installModule.apply(Class, [ module ].concat( params ));\n  };\n\n  Object.defineProperties( SwiperClass, staticAccessors );\n\n  function updateSize () {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== 'undefined') {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n    if (typeof swiper.params.height !== 'undefined') {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n    if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n      return;\n    }\n\n    // Subtract paddings\n    width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n    height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n    Utils.extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height,\n    });\n  }\n\n  function updateSlides () {\n    var swiper = this;\n    var params = swiper.params;\n\n    var $wrapperEl = swiper.$wrapperEl;\n    var swiperSize = swiper.size;\n    var rtl = swiper.rtlTranslate;\n    var wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children((\".\" + (swiper.params.slideClass)));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.snapGrid.length;\n\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween;\n\n    // reset margins\n    if (rtl) { slides.css({ marginLeft: '', marginTop: '' }); }\n    else { slides.css({ marginRight: '', marginBottom: '' }); }\n\n    var slidesNumberEvenToRows;\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    }\n\n    // Calc slides\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = (void 0);\n        var column = (void 0);\n        var row = (void 0);\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n          newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n          slide\n            .css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex,\n            });\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - (row * slidesPerRow);\n        }\n        slide\n          .css(\n            (\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left')),\n            (row !== 0 && params.spaceBetween) && (((params.spaceBetween) + \"px\"))\n          )\n          .attr('data-swiper-column', column)\n          .attr('data-swiper-row', row);\n      }\n      if (slide.css('display') === 'none') { continue; } // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = win.getComputedStyle(slide[0], null);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal()\n            ? slide.outerWidth(true)\n            : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          if (swiper.isHorizontal()) {\n            var width = parseFloat(slideStyles.getPropertyValue('width'));\n            var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n            var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n            var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n            var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n            var boxSizing = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n            }\n          } else {\n            var height = parseFloat(slideStyles.getPropertyValue('height'));\n            var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n            var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n            var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n            var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n            var boxSizing$1 = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing$1 && boxSizing$1 === 'border-box') {\n              slideSize = height + marginTop + marginBottom;\n            } else {\n              slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n            }\n          }\n        }\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n      } else {\n        slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n        if (params.roundLengths) { slideSize = Math.floor(slideSize); }\n\n        if (slides[i]) {\n          if (swiper.isHorizontal()) {\n            slides[i].style.width = slideSize + \"px\";\n          } else {\n            slides[i].style.height = slideSize + \"px\";\n          }\n        }\n      }\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n      slidesSizesGrid.push(slideSize);\n\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (i === 0) { slidePosition = slidePosition - (swiperSize / 2) - spaceBetween; }\n        if (Math.abs(slidePosition) < 1 / 1000) { slidePosition = 0; }\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) { slidePosition = Math.floor(slidePosition); }\n        if ((index) % params.slidesPerGroup === 0) { snapGrid.push(slidePosition); }\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n\n      prevSlideSize = slideSize;\n\n      index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (\n      rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") });\n    }\n    if (!Support.flexbox || params.setWrapperSize) {\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n    }\n\n    if (params.slidesPerColumn > 1) {\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      if (swiper.isHorizontal()) { $wrapperEl.css({ width: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      else { $wrapperEl.css({ height: ((swiper.virtualSize + params.spaceBetween) + \"px\") }); }\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n          var slidesGridItem = snapGrid[i$1];\n          if (params.roundLengths) { slidesGridItem = Math.floor(slidesGridItem); }\n          if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) { newSlidesGrid.push(slidesGridItem); }\n        }\n        snapGrid = newSlidesGrid;\n      }\n    }\n\n    // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n      for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n        var slidesGridItem$1 = snapGrid[i$2];\n        if (params.roundLengths) { slidesGridItem$1 = Math.floor(slidesGridItem$1); }\n        if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(slidesGridItem$1);\n        }\n      }\n      snapGrid = newSlidesGrid;\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n    if (snapGrid.length === 0) { snapGrid = [0]; }\n\n    if (params.spaceBetween !== 0) {\n      if (swiper.isHorizontal()) {\n        if (rtl) { slides.css({ marginLeft: (spaceBetween + \"px\") }); }\n        else { slides.css({ marginRight: (spaceBetween + \"px\") }); }\n      } else { slides.css({ marginBottom: (spaceBetween + \"px\") }); }\n    }\n\n    if (params.centerInsufficientSlides) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      if (allSlidesSize < swiperSize) {\n        var allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    Utils.extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid,\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) { swiper.checkOverflow(); }\n      swiper.emit('snapGridLengthChange');\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight (speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    }\n    // Find slides currently in view\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        var index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) { break; }\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    }\n\n    // Find new height from highest slide in view\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    }\n\n    // Update Height\n    if (newHeight) { swiper.$wrapperEl.css('height', (newHeight + \"px\")); }\n  }\n\n  function updateSlidesOffset () {\n    var swiper = this;\n    var slides = swiper.slides;\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var slides = swiper.slides;\n    var rtl = swiper.rtlTranslate;\n\n    if (slides.length === 0) { return; }\n    if (typeof slides[0].swiperSlideOffset === 'undefined') { swiper.updateSlidesOffset(); }\n\n    var offsetCenter = -translate;\n    if (rtl) { offsetCenter = translate; }\n\n    // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (\n        (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n      ) / (slide.swiperSlideSize + params.spaceBetween);\n      if (params.watchSlidesVisibility) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                  || (slideAfter > 0 && slideAfter <= swiper.size)\n                  || (slideBefore <= 0 && slideAfter >= swiper.size);\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress (translate) {\n    if ( translate === void 0 ) translate = (this && this.translate) || 0;\n\n    var swiper = this;\n    var params = swiper.params;\n\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress;\n    var isBeginning = swiper.isBeginning;\n    var isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / (translatesDiff);\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n    Utils.extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd,\n    });\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) { swiper.updateSlidesProgress(translate); }\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n    if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses () {\n    var swiper = this;\n\n    var slides = swiper.slides;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n    var realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n\n    slides.removeClass(((params.slideActiveClass) + \" \" + (params.slideNextClass) + \" \" + (params.slidePrevClass) + \" \" + (params.slideDuplicateActiveClass) + \" \" + (params.slideDuplicateNextClass) + \" \" + (params.slideDuplicatePrevClass)));\n\n    var activeSlide;\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\"));\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    }\n\n    // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\"))\n          .addClass(params.slideDuplicateActiveClass);\n      }\n    }\n    // Next Slide\n    var nextSlide = activeSlide.nextAll((\".\" + (params.slideClass))).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    }\n    // Prev Slide\n    var prevSlide = activeSlide.prevAll((\".\" + (params.slideClass))).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (nextSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicateNextClass);\n      }\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \":not(.\" + (params.slideDuplicateClass) + \")[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl\n          .children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + (prevSlide.attr('data-swiper-slide-index')) + \"\\\"]\"))\n          .addClass(params.slideDuplicatePrevClass);\n      }\n    }\n  }\n\n  function updateActiveIndex (newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var params = swiper.params;\n    var previousIndex = swiper.activeIndex;\n    var previousRealIndex = swiper.realIndex;\n    var previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') { activeIndex = 0; }\n      }\n    }\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n      return;\n    }\n\n    // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n    Utils.extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex,\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n\n  function updateClickedSlide (e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest((\".\" + (params.slideClass)))[0];\n    var slideFound = false;\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) { slideFound = true; }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = $(slide).index();\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide,\n  };\n\n  function getTranslate (axis) {\n    if ( axis === void 0 ) axis = this.isHorizontal() ? 'x' : 'y';\n\n    var swiper = this;\n\n    var params = swiper.params;\n    var rtl = swiper.rtlTranslate;\n    var translate = swiper.translate;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n    if (rtl) { currentTranslate = -currentTranslate; }\n\n    return currentTranslate || 0;\n  }\n\n  function setTranslate (translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (!params.virtualTranslate) {\n      if (Support.transforms3d) { $wrapperEl.transform((\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\")); }\n      else { $wrapperEl.transform((\"translate(\" + x + \"px, \" + y + \"px)\")); }\n    }\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y;\n\n    // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n    }\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate () {\n    return (-this.snapGrid[0]);\n  }\n\n  function maxTranslate () {\n    return (-this.snapGrid[this.snapGrid.length - 1]);\n  }\n\n  var translate = {\n    getTranslate: getTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n  };\n\n  function setTransition (duration, byController) {\n    var swiper = this;\n\n    swiper.$wrapperEl.transition(duration);\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var params = swiper.params;\n    var previousIndex = swiper.previousIndex;\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n      swiper.emit('slideChangeTransitionStart');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd$1 (runCallbacks, direction) {\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var previousIndex = swiper.previousIndex;\n    swiper.animating = false;\n    swiper.setTransition(0);\n\n    var dir = direction;\n    if (!dir) {\n      if (activeIndex > previousIndex) { dir = 'next'; }\n      else if (activeIndex < previousIndex) { dir = 'prev'; }\n      else { dir = 'reset'; }\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n      swiper.emit('slideChangeTransitionEnd');\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition$1 = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd$1,\n  };\n\n  function slideTo (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) { slideIndex = 0; }\n\n    var params = swiper.params;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var previousIndex = swiper.previousIndex;\n    var activeIndex = swiper.activeIndex;\n    var rtl = swiper.rtlTranslate;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) { snapIndex = snapGrid.length - 1; }\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex];\n\n    // Update progress\n    swiper.updateProgress(translate);\n\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n          slideIndex = i;\n        }\n      }\n    }\n    // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) { return false; }\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) { direction = 'next'; }\n    else if (slideIndex < activeIndex) { direction = 'prev'; }\n    else { direction = 'reset'; }\n\n\n    // Update Index\n    if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n      swiper.updateActiveIndex(slideIndex);\n      // Update Height\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      swiper.updateSlidesClasses();\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n      return false;\n    }\n\n    if (speed === 0 || !Support.transition) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop (index, speed, runCallbacks, internal) {\n    if ( index === void 0 ) index = 0;\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var params = swiper.params;\n    var animating = swiper.animating;\n    var snapGrid = swiper.snapGrid;\n    var slidesGrid = swiper.slidesGrid;\n    var rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating) { return false; }\n      swiper.loopFix();\n      // eslint-disable-next-line\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n      if (val < 0) { return -Math.floor(Math.abs(val)); }\n      return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) { return normalize(val); });\n    var normalizedSlidesGrid = slidesGrid.map(function (val) { return normalize(val); });\n\n    var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    var prevIndex;\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) { prevIndex = swiper.activeIndex - 1; }\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest (speed, runCallbacks, internal) {\n    if ( speed === void 0 ) speed = this.params.speed;\n    if ( runCallbacks === void 0 ) runCallbacks = true;\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n    if (snapIndex < swiper.snapGrid.length - 1) {\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n        index = swiper.params.slidesPerGroup;\n      }\n    }\n\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n      if (swiper.animating) { return; }\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      if (params.centeredSlides) {\n        if (\n          (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n          || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n        ) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl\n            .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n            .eq(0)\n            .index();\n\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children((\".\" + (params.slideClass) + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + (params.slideDuplicateClass) + \")\"))\n          .eq(0)\n          .index();\n\n        Utils.nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide,\n  };\n\n  function loopCreate () {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    // Remove duplicated slides\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass))).remove();\n\n    var slides = $wrapperEl.children((\".\" + (params.slideClass)));\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(doc.createElement('div')).addClass(((params.slideClass) + \" \" + (params.slideBlankClass)));\n          $wrapperEl.append(blankNode);\n        }\n        slides = $wrapperEl.children((\".\" + (params.slideClass)));\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) { params.loopedSlides = slides.length; }\n\n    swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (index, el) {\n      var slide = $(el);\n      if (index < swiper.loopedSlides) { appendSlides.push(el); }\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) { prependSlides.push(el); }\n      slide.attr('data-swiper-slide-index', index);\n    });\n    for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n      $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n    for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix () {\n    var swiper = this;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var slides = swiper.slides;\n    var loopedSlides = swiper.loopedSlides;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var allowSlideNext = swiper.allowSlideNext;\n    var snapGrid = swiper.snapGrid;\n    var rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate();\n\n\n    // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n      newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n      var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n      if (slideChanged$1 && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n  }\n\n  function loopDestroy () {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var slides = swiper.slides;\n    $wrapperEl.children((\".\" + (params.slideClass) + \".\" + (params.slideDuplicateClass) + \",.\" + (params.slideClass) + \".\" + (params.slideBlankClass))).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy,\n  };\n\n  function setGrabCursor (moving) {\n    var swiper = this;\n    if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor () {\n    var swiper = this;\n    if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) { return; }\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor,\n  };\n\n  function appendSlide (slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.append(slides[i]); }\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide (slides) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) { $wrapperEl.prepend(slides[i]); }\n      }\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide (index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl;\n    var params = swiper.params;\n    var activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n    var slidesBuffer = [];\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (slides[i$1]) { $wrapperEl.append(slides[i$1]); }\n      }\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n      $wrapperEl.append(slidesBuffer[i$2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide (slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl;\n    var activeIndex = swiper.activeIndex;\n\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children((\".\" + (params.slideClass)));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n        if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) { swiper.slides.eq(indexToRemove).remove(); }\n      if (indexToRemove < newActiveIndex) { newActiveIndex -= 1; }\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && Support.observer)) {\n      swiper.update();\n    }\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides () {\n    var swiper = this;\n\n    var slidesIndexes = [];\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides,\n  };\n\n  var Device = (function Device() {\n    var ua = win.navigator.userAgent;\n\n    var device = {\n      ios: false,\n      android: false,\n      androidChrome: false,\n      desktop: false,\n      windows: false,\n      iphone: false,\n      ipod: false,\n      ipad: false,\n      cordova: win.cordova || win.phonegap,\n      phonegap: win.cordova || win.phonegap,\n    };\n\n    var windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n    // Windows\n    if (windows) {\n      device.os = 'windows';\n      device.osVersion = windows[2];\n      device.windows = true;\n    }\n    // Android\n    if (android && !windows) {\n      device.os = 'android';\n      device.osVersion = android[2];\n      device.android = true;\n      device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n    }\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    }\n    // iOS\n    if (iphone && !ipod) {\n      device.osVersion = iphone[2].replace(/_/g, '.');\n      device.iphone = true;\n    }\n    if (ipad) {\n      device.osVersion = ipad[2].replace(/_/g, '.');\n      device.ipad = true;\n    }\n    if (ipod) {\n      device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n      device.iphone = true;\n    }\n    // iOS 8+ changed UA\n    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n      if (device.osVersion.split('.')[0] === '10') {\n        device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n      }\n    }\n\n    // Desktop\n    device.desktop = !(device.os || device.android || device.webView);\n\n    // Webview\n    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n    // Minimal UI\n    if (device.os && device.os === 'ios') {\n      var osVersionArr = device.osVersion.split('.');\n      var metaViewport = doc.querySelector('meta[name=\"viewport\"]');\n      device.minimalUi = !device.webView\n        && (ipod || iphone)\n        && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n        && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n    }\n\n    // Pixel Ratio\n    device.pixelRatio = win.devicePixelRatio || 1;\n\n    // Export object\n    return device;\n  }());\n\n  function onTouchStart (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) { return; }\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) { return; }\n    if (data.isTouched && data.isMoved) { return; }\n    if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : (\".\" + (params.noSwipingClass)))[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n    if (params.swipeHandler) {\n      if (!$(e).closest(params.swipeHandler)[0]) { return; }\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY;\n\n    // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (\n      edgeSwipeDetection\n      && ((startX <= edgeSwipeThreshold)\n      || (startX >= win.screen.width - edgeSwipeThreshold))\n    ) {\n      return;\n    }\n\n    Utils.extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined,\n    });\n\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = Utils.now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) { data.allowThresholdMove = false; }\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($(e.target).is(data.formElements)) { preventDefault = false; }\n      if (\n        doc.activeElement\n        && $(doc.activeElement).is(data.formElements)\n        && doc.activeElement !== e.target\n      ) {\n        doc.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n      if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n        e.preventDefault();\n      }\n    }\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      return;\n    }\n    if (data.isTouchEvent && e.type === 'mousemove') { return; }\n    var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n      if (data.isTouched) {\n        Utils.extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY,\n        });\n        data.touchStartTime = Utils.now();\n      }\n      return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (\n          (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n          || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n        ) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (\n        (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n        || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n      ) {\n        return;\n      }\n    }\n    if (data.isTouchEvent && doc.activeElement) {\n      if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n    if (e.targetTouches && e.targetTouches.length > 1) { return; }\n\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt((Math.pow( diffX, 2 )) + (Math.pow( diffY, 2 ))) < swiper.params.threshold) { return; }\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n      if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if ((diffX * diffX) + (diffY * diffY) >= 25) {\n          touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n        }\n      }\n    }\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n    if (!data.startMoving) {\n      return;\n    }\n    swiper.allowClick = false;\n    e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n      data.allowMomentumBounce = false;\n      // Grab Cursor\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n      swiper.emit('sliderFirstMove', e);\n    }\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n\n    diff *= params.touchRatio;\n    if (rtl) { diff = -diff; }\n\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n    if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.minTranslate() - 1) + (Math.pow( (-swiper.minTranslate() + data.startTranslate + diff), resistanceRatio )); }\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) { data.currentTranslate = (swiper.maxTranslate() + 1) - (Math.pow( (swiper.maxTranslate() - data.startTranslate - diff), resistanceRatio )); }\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    }\n\n    // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n\n    // Threshold\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger) { return; }\n\n    // Update active index in free mode\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime,\n        });\n      }\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: Utils.now(),\n      });\n    }\n    // Update progress\n    swiper.updateProgress(data.currentTranslate);\n    // Update translate\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd (event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n\n    var params = swiper.params;\n    var touches = swiper.touches;\n    var rtl = swiper.rtlTranslate;\n    var $wrapperEl = swiper.$wrapperEl;\n    var slidesGrid = swiper.slidesGrid;\n    var snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) { e = e.originalEvent; }\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    }\n\n    // Time diff\n    var touchEndTime = Utils.now();\n    var timeDiff = touchEndTime - data.touchStartTime;\n\n    // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap', e);\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        data.clickTimeout = Utils.nextTick(function () {\n          if (!swiper || swiper.destroyed) { return; }\n          swiper.emit('click', e);\n        }, 300);\n      }\n      if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n        if (data.clickTimeout) { clearTimeout(data.clickTimeout); }\n        swiper.emit('doubleTap', e);\n      }\n    }\n\n    data.lastClickTime = Utils.now();\n    Utils.nextTick(function () {\n      if (!swiper.destroyed) { swiper.allowClick = true; }\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n\n    var currentPos;\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          }\n          // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n          if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) { newPosition = -newPosition; }\n\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n          if (params.loop && params.centeredSlides) { needsLoopFix = true; }\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n          newPosition = -newPosition;\n        }\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        }\n        // Fix duration\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) { return; }\n            swiper.emit('momentumBounce');\n\n            swiper.setTransition(params.speed);\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) { return; }\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      return;\n    }\n\n    // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for (var i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n      if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    }\n\n    // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > (1 - params.longSwipesRatio)) { swiper.slideTo(stopIndex + params.slidesPerGroup); }\n        else { swiper.slideTo(stopIndex); }\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize () {\n    var swiper = this;\n\n    var params = swiper.params;\n    var el = swiper.el;\n\n    if (el && el.offsetWidth === 0) { return; }\n\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Save locks\n    var allowSlideNext = swiper.allowSlideNext;\n    var allowSlidePrev = swiper.allowSlidePrev;\n    var snapGrid = swiper.snapGrid;\n\n    // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n\n    swiper.updateSize();\n    swiper.updateSlides();\n\n    if (params.freeMode) {\n      var newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n    }\n    // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick (e) {\n    var swiper = this;\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) { e.preventDefault(); }\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function attachEvents() {\n    var swiper = this;\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    {\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture: capture } : capture);\n          target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.addEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  }\n\n  function detachEvents() {\n    var swiper = this;\n\n    var params = swiper.params;\n    var touchEvents = swiper.touchEvents;\n    var el = swiper.el;\n    var wrapperEl = swiper.wrapperEl;\n\n    var target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n    var capture = !!params.nested;\n\n    // Touch Events\n    {\n      if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n          target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n        }\n        if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n          target.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        target.removeEventListener('click', swiper.onClick, true);\n      }\n    }\n\n    // Resize handler\n    swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents,\n  };\n\n  function setBreakpoint () {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex;\n    var initialized = swiper.initialized;\n    var loopedSlides = swiper.loopedSlides; if ( loopedSlides === void 0 ) loopedSlides = 0;\n    var params = swiper.params;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) { return; }\n\n    // Set breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n          if (typeof paramValue === 'undefined') { return; }\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n\n      Utils.extend(swiper.params, breakpointParams);\n\n      Utils.extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n      });\n\n      swiper.currentBreakpoint = breakpoint;\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n      }\n\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint (breakpoints) {\n    var swiper = this;\n    // Get breakpoint for window width\n    if (!breakpoints) { return undefined; }\n    var breakpoint = false;\n    var points = [];\n    Object.keys(breakpoints).forEach(function (point) {\n      points.push(point);\n    });\n    points.sort(function (a, b) { return parseInt(a, 10) - parseInt(b, 10); });\n    for (var i = 0; i < points.length; i += 1) {\n      var point = points[i];\n      if (swiper.params.breakpointsInverse) {\n        if (point <= win.innerWidth) {\n          breakpoint = point;\n        }\n      } else if (point >= win.innerWidth && !breakpoint) {\n        breakpoint = point;\n      }\n    }\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = { setBreakpoint: setBreakpoint, getBreakpoint: getBreakpoint };\n\n  function addClasses () {\n    var swiper = this;\n    var classNames = swiper.classNames;\n    var params = swiper.params;\n    var rtl = swiper.rtl;\n    var $el = swiper.$el;\n    var suffixes = [];\n\n    suffixes.push('initialized');\n    suffixes.push(params.direction);\n\n    if (params.freeMode) {\n      suffixes.push('free-mode');\n    }\n    if (!Support.flexbox) {\n      suffixes.push('no-flexbox');\n    }\n    if (params.autoHeight) {\n      suffixes.push('autoheight');\n    }\n    if (rtl) {\n      suffixes.push('rtl');\n    }\n    if (params.slidesPerColumn > 1) {\n      suffixes.push('multirow');\n    }\n    if (Device.android) {\n      suffixes.push('android');\n    }\n    if (Device.ios) {\n      suffixes.push('ios');\n    }\n    // WP8 Touch Events Fix\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      suffixes.push((\"wp8-\" + (params.direction)));\n    }\n\n    suffixes.forEach(function (suffix) {\n      classNames.push(params.containerModifierClass + suffix);\n    });\n\n    $el.addClass(classNames.join(' '));\n  }\n\n  function removeClasses () {\n    var swiper = this;\n    var $el = swiper.$el;\n    var classNames = swiper.classNames;\n\n    $el.removeClass(classNames.join(' '));\n  }\n\n  var classes = { addClasses: addClasses, removeClasses: removeClasses };\n\n  function loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var image;\n    function onReady() {\n      if (callback) { callback(); }\n    }\n    if (!imageEl.complete || !checkForComplete) {\n      if (src) {\n        image = new win.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n        if (sizes) {\n          image.sizes = sizes;\n        }\n        if (srcset) {\n          image.srcset = srcset;\n        }\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages () {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) { return; }\n      if (swiper.imagesLoaded !== undefined) { swiper.imagesLoaded += 1; }\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) { swiper.update(); }\n        swiper.emit('imagesReady');\n      }\n    }\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(\n        imageEl,\n        imageEl.currentSrc || imageEl.getAttribute('src'),\n        imageEl.srcset || imageEl.getAttribute('srcset'),\n        imageEl.sizes || imageEl.getAttribute('sizes'),\n        true,\n        onReady\n      );\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages,\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked;\n\n    swiper.isLocked = swiper.snapGrid.length === 1;\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked;\n\n    // events\n    if (wasLocked !== swiper.isLocked) { swiper.emit(swiper.isLocked ? 'lock' : 'unlock'); }\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = { checkOverflow: checkOverflow };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    //\n    preventInteractionOnTransition: false,\n\n    // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n\n    // Autoheight\n    autoHeight: false,\n\n    // Set wrapper width\n    setWrapperSize: false,\n\n    // Virtual Translate\n    virtualTranslate: false,\n\n    // Effects\n    effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsInverse: false,\n\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    centeredSlides: false,\n    slidesOffsetBefore: 0, // in px\n    slidesOffsetAfter: 0, // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n\n    // Round length\n    roundLengths: false,\n\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: true,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n\n    // Cursor\n    grabCursor: false,\n\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null, // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n\n    // Passive Listeners\n    passiveListeners: true,\n\n    // NS\n    containerModifierClass: 'swiper-container-', // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n\n    // Callbacks\n    runCallbacksOnInit: true,\n  };\n\n  /* eslint no-param-reassign: \"off\" */\n\n  var prototypes = {\n    update: update,\n    translate: translate,\n    transition: transition$1,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images,\n  };\n\n  var extendedDefaults = {};\n\n  var Swiper = /*@__PURE__*/(function (SwiperClass) {\n    function Swiper() {\n      var assign;\n\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n      var el;\n      var params;\n      if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n        params = args[0];\n      } else {\n        (assign = args, el = assign[0], params = assign[1]);\n      }\n      if (!params) { params = {}; }\n\n      params = Utils.extend({}, params);\n      if (el && !params.el) { params.el = el; }\n\n      SwiperClass.call(this, params);\n\n      Object.keys(prototypes).forEach(function (prototypeGroup) {\n        Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n          if (!Swiper.prototype[protoMethod]) {\n            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n          }\n        });\n      });\n\n      // Swiper Instance\n      var swiper = this;\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) { return; }\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) { return; }\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = { enabled: true };\n          }\n          if (\n            typeof params[moduleParamName] === 'object'\n            && !('enabled' in params[moduleParamName])\n          ) {\n            params[moduleParamName].enabled = true;\n          }\n          if (!params[moduleParamName]) { params[moduleParamName] = { enabled: false }; }\n        }\n      });\n\n      // Extend defaults with modules params\n      var swiperParams = Utils.extend({}, defaults);\n      swiper.useModulesParams(swiperParams);\n\n      // Extend defaults with passed params\n      swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = Utils.extend({}, swiper.params);\n      swiper.passedParams = Utils.extend({}, params);\n\n      // Save Dom lib\n      swiper.$ = $;\n\n      // Find el\n      var $el = $(swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return undefined;\n      }\n\n      if ($el.length > 1) {\n        var swipers = [];\n        $el.each(function (index, containerEl) {\n          var newParams = Utils.extend({}, params, { el: containerEl });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      }\n\n      el.swiper = swiper;\n      $el.data('swiper', swiper);\n\n      // Find Wrapper\n      var $wrapperEl = $el.children((\".\" + (swiper.params.wrapperClass)));\n\n      // Extend Swiper\n      Utils.extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n\n        // Classes\n        classNames: [],\n\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // RTL\n        rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n\n        //\n        isBeginning: true,\n        isEnd: false,\n\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n\n        // Touch Events\n        touchEvents: (function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n          if (Support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          } else if (Support.prefixedPointerEvents) {\n            desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n          }\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2],\n          };\n          return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }()),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video',\n          // Last click time\n          lastClickTime: Utils.now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined,\n        },\n\n        // Clicks\n        allowClick: true,\n\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0,\n        },\n\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0,\n\n      });\n\n      // Install Modules\n      swiper.useModules();\n\n      // Init\n      if (swiper.params.init) {\n        swiper.init();\n      }\n\n      // Return app instance\n      return swiper;\n    }\n\n    if ( SwiperClass ) Swiper.__proto__ = SwiperClass;\n    Swiper.prototype = Object.create( SwiperClass && SwiperClass.prototype );\n    Swiper.prototype.constructor = Swiper;\n\n    var staticAccessors = { extendedDefaults: { configurable: true },defaults: { configurable: true },Class: { configurable: true },$: { configurable: true } };\n\n    Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic () {\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var slidesGrid = swiper.slidesGrid;\n      var swiperSize = swiper.size;\n      var activeIndex = swiper.activeIndex;\n      var spv = 1;\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n        for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n          if (slides[i$1] && !breakLoop) {\n            slideSize += slides[i$1].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) { breakLoop = true; }\n          }\n        }\n      } else {\n        for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n          if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n      return spv;\n    };\n\n    Swiper.prototype.update = function update () {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) { return; }\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      var translated;\n      if (swiper.params.freeMode) {\n        setTranslate();\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n        if (!translated) {\n          setTranslate();\n        }\n      }\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n      swiper.emit('update');\n    };\n\n    Swiper.prototype.changeDirection = function changeDirection (newDirection, needUpdate) {\n      if ( needUpdate === void 0 ) needUpdate = true;\n\n      var swiper = this;\n      var currentDirection = swiper.params.direction;\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n      if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n        return swiper;\n      }\n\n      if (currentDirection === 'vertical') {\n        swiper.$el\n          .removeClass(((swiper.params.containerModifierClass) + \"vertical wp8-vertical\"))\n          .addClass((\"\" + (swiper.params.containerModifierClass) + newDirection));\n\n        if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n          swiper.$el.addClass(((swiper.params.containerModifierClass) + \"wp8-\" + newDirection));\n        }\n      }\n      if (currentDirection === 'horizontal') {\n        swiper.$el\n          .removeClass(((swiper.params.containerModifierClass) + \"horizontal wp8-horizontal\"))\n          .addClass((\"\" + (swiper.params.containerModifierClass) + newDirection));\n\n        if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n          swiper.$el.addClass(((swiper.params.containerModifierClass) + \"wp8-\" + newDirection));\n        }\n      }\n\n      swiper.params.direction = newDirection;\n\n      swiper.slides.each(function (slideIndex, slideEl) {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n\n      swiper.emit('changeDirection');\n      if (needUpdate) { swiper.update(); }\n\n      return swiper;\n    };\n\n    Swiper.prototype.init = function init () {\n      var swiper = this;\n      if (swiper.initialized) { return; }\n\n      swiper.emit('beforeInit');\n\n      // Set breakpoint\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Add Classes\n      swiper.addClasses();\n\n      // Create loop\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      }\n\n      // Update size\n      swiper.updateSize();\n\n      // Update slides\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      }\n\n      // Set Grab Cursor\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      }\n\n      // Slide To Initial Slide\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      }\n\n      // Attach events\n      swiper.attachEvents();\n\n      // Init Flag\n      swiper.initialized = true;\n\n      // Emit\n      swiper.emit('init');\n    };\n\n    Swiper.prototype.destroy = function destroy (deleteInstance, cleanStyles) {\n      if ( deleteInstance === void 0 ) deleteInstance = true;\n      if ( cleanStyles === void 0 ) cleanStyles = true;\n\n      var swiper = this;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy');\n\n      // Init Flag\n      swiper.initialized = false;\n\n      // Detach events\n      swiper.detachEvents();\n\n      // Destroy loop\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n\n      // Cleanup styles\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n        if (slides && slides.length) {\n          slides\n            .removeClass([\n              params.slideVisibleClass,\n              params.slideActiveClass,\n              params.slideNextClass,\n              params.slidePrevClass ].join(' '))\n            .removeAttr('style')\n            .removeAttr('data-swiper-slide-index')\n            .removeAttr('data-swiper-column')\n            .removeAttr('data-swiper-row');\n        }\n      }\n\n      swiper.emit('destroy');\n\n      // Detach emitter events\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        swiper.$el.data('swiper', null);\n        Utils.deleteProps(swiper);\n      }\n      swiper.destroyed = true;\n\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults (newDefaults) {\n      Utils.extend(extendedDefaults, newDefaults);\n    };\n\n    staticAccessors.extendedDefaults.get = function () {\n      return extendedDefaults;\n    };\n\n    staticAccessors.defaults.get = function () {\n      return defaults;\n    };\n\n    staticAccessors.Class.get = function () {\n      return SwiperClass;\n    };\n\n    staticAccessors.$.get = function () {\n      return $;\n    };\n\n    Object.defineProperties( Swiper, staticAccessors );\n\n    return Swiper;\n  }(SwiperClass));\n\n  var Device$1 = {\n    name: 'device',\n    proto: {\n      device: Device,\n    },\n    static: {\n      device: Device,\n    },\n  };\n\n  var Support$1 = {\n    name: 'support',\n    proto: {\n      support: Support,\n    },\n    static: {\n      support: Support,\n    },\n  };\n\n  var Browser$1 = {\n    name: 'browser',\n    proto: {\n      browser: Browser,\n    },\n    static: {\n      browser: Browser,\n    },\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        resize: {\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) { return; }\n            swiper.emit('orientationchange');\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        // Emit resize\n        win.addEventListener('resize', swiper.resize.resizeHandler);\n\n        // Emit orientationchange\n        win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        win.removeEventListener('resize', swiper.resize.resizeHandler);\n        win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n    },\n  };\n\n  var Observer = {\n    func: win.MutationObserver || win.WebkitMutationObserver,\n    attach: function attach(target, options) {\n      if ( options === void 0 ) options = {};\n\n      var swiper = this;\n\n      var ObserverFunc = Observer.func;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (win.requestAnimationFrame) {\n          win.requestAnimationFrame(observerUpdate);\n        } else {\n          win.setTimeout(observerUpdate, 0);\n        }\n      });\n\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n      });\n\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!Support.observer || !swiper.params.observer) { return; }\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      }\n      // Observe container\n      swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n      // Observe wrapper\n      swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    },\n  };\n\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false,\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        observer: {\n          init: Observer.init.bind(swiper),\n          attach: Observer.attach.bind(swiper),\n          destroy: Observer.destroy.bind(swiper),\n          observers: [],\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.observer.init();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.destroy();\n      },\n    },\n  };\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var ref = swiper.params;\n      var slidesPerView = ref.slidesPerView;\n      var slidesPerGroup = ref.slidesPerGroup;\n      var centeredSlides = ref.centeredSlides;\n      var ref$1 = swiper.params.virtual;\n      var addSlidesBefore = ref$1.addSlidesBefore;\n      var addSlidesAfter = ref$1.addSlidesAfter;\n      var ref$2 = swiper.virtual;\n      var previousFrom = ref$2.from;\n      var previousTo = ref$2.to;\n      var slides = ref$2.slides;\n      var previousSlidesGrid = ref$2.slidesGrid;\n      var renderSlide = ref$2.renderSlide;\n      var previousOffset = ref$2.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n\n      var offsetProp;\n      if (swiper.rtlTranslate) { offsetProp = 'right'; }\n      else { offsetProp = swiper.isHorizontal() ? 'left' : 'top'; }\n\n      var slidesAfter;\n      var slidesBefore;\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n        slidesBefore = slidesPerGroup + addSlidesAfter;\n      }\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n      Utils.extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid,\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, (offset + \"px\"));\n        }\n        swiper.updateProgress();\n        return;\n      }\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: (function getSlides() {\n            var slidesToRender = [];\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n            return slidesToRender;\n          }()),\n        });\n        onRendered();\n        return;\n      }\n      var prependIndexes = [];\n      var appendIndexes = [];\n      if (force) {\n        swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass))).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\")).remove();\n          }\n        }\n      }\n      for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n        if (i$1 >= from && i$1 <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(i$1);\n          } else {\n            if (i$1 > previousTo) { appendIndexes.push(i$1); }\n            if (i$1 < previousFrom) { prependIndexes.push(i$1); }\n          }\n        }\n      }\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) { return b - a; }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, (offset + \"px\"));\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n      var $slideEl = params.renderSlide\n        ? $(params.renderSlide.call(swiper, slide, index))\n        : $((\"<div class=\\\"\" + (swiper.params.slideClass) + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\"));\n      if (!$slideEl.attr('data-swiper-slide-index')) { $slideEl.attr('data-swiper-slide-index', index); }\n      if (params.cache) { swiper.virtual.cache[index] = $slideEl; }\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slides) {\n      var swiper = this;\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) { swiper.virtual.slides.push(slides[i]); }\n        }\n      } else {\n        swiper.virtual.slides.push(slides);\n      }\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slides) {\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var newActiveIndex = activeIndex + 1;\n      var numberOfNewSlides = 1;\n\n      if (Array.isArray(slides)) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) { swiper.virtual.slides.unshift(slides[i]); }\n        }\n        newActiveIndex = activeIndex + slides.length;\n        numberOfNewSlides = slides.length;\n      } else {\n        swiper.virtual.slides.unshift(slides);\n      }\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n        });\n        swiper.virtual.cache = newCache;\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(newActiveIndex, 0);\n    },\n    removeSlide: function removeSlide(slidesIndexes) {\n      var swiper = this;\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) { return; }\n      var activeIndex = swiper.activeIndex;\n      if (Array.isArray(slidesIndexes)) {\n        for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes[i]];\n          }\n          if (slidesIndexes[i] < activeIndex) { activeIndex -= 1; }\n          activeIndex = Math.max(activeIndex, 0);\n        }\n      } else {\n        swiper.virtual.slides.splice(slidesIndexes, 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes];\n        }\n        if (slidesIndexes < activeIndex) { activeIndex -= 1; }\n        activeIndex = Math.max(activeIndex, 0);\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(activeIndex, 0);\n    },\n    removeAllSlides: function removeAllSlides() {\n      var swiper = this;\n      swiper.virtual.slides = [];\n      if (swiper.params.virtual.cache) {\n        swiper.virtual.cache = {};\n      }\n      swiper.virtual.update(true);\n      swiper.slideTo(0, 0);\n    },\n  };\n\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        virtual: {\n          update: Virtual.update.bind(swiper),\n          appendSlide: Virtual.appendSlide.bind(swiper),\n          prependSlide: Virtual.prependSlide.bind(swiper),\n          removeSlide: Virtual.removeSlide.bind(swiper),\n          removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n          renderSlide: Virtual.renderSlide.bind(swiper),\n          slides: swiper.params.virtual.slides,\n          cache: {},\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"virtual\"));\n        var overwriteParams = {\n          watchSlidesProgress: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.virtual.enabled) { return; }\n        swiper.virtual.update();\n      },\n    },\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var kc = e.keyCode || e.charCode;\n      // Directions locks\n      if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n        return false;\n      }\n      if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n        return false;\n      }\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n      if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n      if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n        var inView = false;\n        // Check that swiper should be inside of visible area of window\n        if (swiper.$el.parents((\".\" + (swiper.params.slideClass))).length > 0 && swiper.$el.parents((\".\" + (swiper.params.slideActiveClass))).length === 0) {\n          return undefined;\n        }\n        var windowWidth = win.innerWidth;\n        var windowHeight = win.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) { swiperOffset.left -= swiper.$el[0].scrollLeft; }\n        var swiperCoord = [\n          [swiperOffset.left, swiperOffset.top],\n          [swiperOffset.left + swiper.width, swiperOffset.top],\n          [swiperOffset.left, swiperOffset.top + swiper.height],\n          [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height] ];\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n          if (\n            point[0] >= 0 && point[0] <= windowWidth\n            && point[1] >= 0 && point[1] <= windowHeight\n          ) {\n            inView = true;\n          }\n        }\n        if (!inView) { return undefined; }\n      }\n      if (swiper.isHorizontal()) {\n        if (kc === 37 || kc === 39) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if ((kc === 39 && !rtl) || (kc === 37 && rtl)) { swiper.slideNext(); }\n        if ((kc === 37 && !rtl) || (kc === 39 && rtl)) { swiper.slidePrev(); }\n      } else {\n        if (kc === 38 || kc === 40) {\n          if (e.preventDefault) { e.preventDefault(); }\n          else { e.returnValue = false; }\n        }\n        if (kc === 40) { swiper.slideNext(); }\n        if (kc === 38) { swiper.slidePrev(); }\n      }\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (swiper.keyboard.enabled) { return; }\n      $(doc).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!swiper.keyboard.enabled) { return; }\n      $(doc).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    },\n  };\n\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        keyboard: {\n          enabled: false,\n          enable: Keyboard.enable.bind(swiper),\n          disable: Keyboard.disable.bind(swiper),\n          handle: Keyboard.handle.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      },\n    },\n  };\n\n  function isEventSupported() {\n    var eventName = 'onwheel';\n    var isSupported = eventName in doc;\n\n    if (!isSupported) {\n      var element = doc.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported\n      && doc.implementation\n      && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true\n    ) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n  var Mousewheel = {\n    lastScrollTime: Utils.now(),\n    event: (function getEvent() {\n      if (win.navigator.userAgent.indexOf('firefox') > -1) { return 'DOMMouseScroll'; }\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    }()),\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n\n      // Legacy\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      }\n\n      // side scrolling on FF with DOMMouseScroll\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) { // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else { // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      }\n\n      // Fall-back if spin cannot be determined\n      if (pX && !sX) {\n        sX = (pX < 1) ? -1 : 1;\n      }\n      if (pY && !sY) {\n        sY = (pY < 1) ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY,\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (!swiper.mouseEntered && !params.releaseOnEdges) { return true; }\n\n      if (e.originalEvent) { e = e.originalEvent; } // jquery fix\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) { delta = data.pixelX * rtlFactor; }\n          else { return true; }\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) { delta = data.pixelY; }\n        else { return true; }\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) { return true; }\n\n      if (params.invert) { delta = -delta; }\n\n      if (!swiper.params.freeMode) {\n        if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n          if (delta < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n              swiper.slideNext();\n              swiper.emit('scroll', e);\n            } else if (params.releaseOnEdges) { return true; }\n          } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) { return true; }\n        }\n        swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\n      } else {\n        // Freemode or scrollContainer:\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        var position = swiper.getTranslate() + (delta * params.sensitivity);\n        var wasBeginning = swiper.isBeginning;\n        var wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) { position = swiper.minTranslate(); }\n        if (position <= swiper.maxTranslate()) { position = swiper.maxTranslate(); }\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = Utils.nextTick(function () {\n            swiper.slideToClosest();\n          }, 300);\n        }\n        // Emit event\n        swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) { swiper.autoplay.stop(); }\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) { return true; }\n      }\n\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      if (!Mousewheel.event) { return false; }\n      if (!swiper.mousewheel.enabled) { return false; }\n      var target = swiper.$el;\n      if (swiper.params.mousewheel.eventsTarged !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarged);\n      }\n      target.off(Mousewheel.event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    },\n  };\n\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarged: 'container',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        mousewheel: {\n          enabled: false,\n          enable: Mousewheel.enable.bind(swiper),\n          disable: Mousewheel.disable.bind(swiper),\n          handle: Mousewheel.handle.bind(swiper),\n          handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n          handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n          lastScrollTime: Utils.now(),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.mousewheel.enabled) { swiper.mousewheel.enable(); }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.mousewheel.enabled) { swiper.mousewheel.disable(); }\n      },\n    },\n  };\n\n  var Navigation = {\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          $prevEl.addClass(params.disabledClass);\n        } else {\n          $prevEl.removeClass(params.disabledClass);\n        }\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          $nextEl.addClass(params.disabledClass);\n        } else {\n          $nextEl.removeClass(params.disabledClass);\n        }\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) { return; }\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) { return; }\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) { return; }\n\n      var $nextEl;\n      var $prevEl;\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.nextEl === 'string'\n          && $nextEl.length > 1\n          && swiper.$el.find(params.nextEl).length === 1\n        ) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n        if (\n          swiper.params.uniqueNavElements\n          && typeof params.prevEl === 'string'\n          && $prevEl.length > 1\n          && swiper.$el.find(params.prevEl).length === 1\n        ) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      Utils.extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    },\n  };\n\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        navigation: {\n          init: Navigation.init.bind(swiper),\n          update: Navigation.update.bind(swiper),\n          destroy: Navigation.destroy.bind(swiper),\n          onNextClick: Navigation.onNextClick.bind(swiper),\n          onPrevClick: Navigation.onPrevClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        swiper.navigation.update();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.navigation.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if (\n          swiper.params.navigation.hideOnClick\n          && !$(e.target).is($prevEl)\n          && !$(e.target).is($nextEl)\n        ) {\n          var isHidden;\n          if ($nextEl) {\n            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n          } else if ($prevEl) {\n            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n          }\n          if (isHidden === true) {\n            swiper.emit('navigationShow', swiper);\n          } else {\n            swiper.emit('navigationHide', swiper);\n          }\n          if ($nextEl) {\n            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n          if ($prevEl) {\n            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n        }\n      },\n    },\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      // Current/Total\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n        if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n          current -= (slidesLength - (swiper.loopedSlides * 2));\n        }\n        if (current > total - 1) { current -= total; }\n        if (current < 0 && swiper.params.paginationType !== 'bullets') { current = total + current; }\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      }\n      // Types\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', ((swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)) + \"px\"));\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n            if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n        bullets.removeClass(((params.bulletActiveClass) + \" \" + (params.bulletActiveClass) + \"-next \" + (params.bulletActiveClass) + \"-next-next \" + (params.bulletActiveClass) + \"-prev \" + (params.bulletActiveClass) + \"-prev-prev \" + (params.bulletActiveClass) + \"-main\"));\n        if ($el.length > 1) {\n          bullets.each(function (index, bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(((params.bulletActiveClass) + \"-main\"));\n              }\n              if (bulletIndex === firstIndex) {\n                $bullet\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev\"))\n                  .prev()\n                  .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n              }\n              if (bulletIndex === lastIndex) {\n                $bullet\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next\"))\n                  .next()\n                  .addClass(((params.bulletActiveClass) + \"-next-next\"));\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          $bullet.addClass(params.bulletActiveClass);\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(((params.bulletActiveClass) + \"-main\"));\n            }\n            $firstDisplayedBullet\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev\"))\n              .prev()\n              .addClass(((params.bulletActiveClass) + \"-prev-prev\"));\n            $lastDisplayedBullet\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next\"))\n              .next()\n              .addClass(((params.bulletActiveClass) + \"-next-next\"));\n          }\n        }\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', (bulletsOffset + \"px\"));\n        }\n      }\n      if (params.type === 'fraction') {\n        $el.find((\".\" + (params.currentClass))).text(params.formatFractionCurrent(current + 1));\n        $el.find((\".\" + (params.totalClass))).text(params.formatFractionTotal(total));\n      }\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        $el.find((\".\" + (params.progressbarFillClass))).transform((\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\")).transition(swiper.params.speed);\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', swiper, $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', swiper, $el[0]);\n      }\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + (params.bulletElement) + \" class=\\\"\" + (params.bulletClass) + \"\\\"></\" + (params.bulletElement) + \">\";\n          }\n        }\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find((\".\" + (params.bulletClass)));\n      }\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.currentClass) + \"\\\"></span>\"\n          + ' / '\n          + \"<span class=\\\"\" + (params.totalClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + (params.progressbarFillClass) + \"\\\"></span>\";\n        }\n        $el.html(paginationHTML);\n      }\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) { return; }\n\n      var $el = $(params.el);\n      if ($el.length === 0) { return; }\n\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.el === 'string'\n        && $el.length > 1\n        && swiper.$el.find(params.el).length === 1\n      ) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass((\"\" + (params.modifierClass) + (params.type) + \"-dynamic\"));\n        swiper.pagination.dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', (\".\" + (params.bulletClass)), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) { index += swiper.loopedSlides; }\n          swiper.slideTo(index);\n        });\n      }\n\n      Utils.extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0],\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) { return; }\n      var $el = swiper.pagination.$el;\n\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) { swiper.pagination.bullets.removeClass(params.bulletActiveClass); }\n      if (params.clickable) {\n        $el.off('click', (\".\" + (params.bulletClass)));\n      }\n    },\n  };\n\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function (number) { return number; },\n        formatFractionTotal: function (number) { return number; },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-', // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable', // NEW\n        lockClass: 'swiper-pagination-lock',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        pagination: {\n          init: Pagination.init.bind(swiper),\n          render: Pagination.render.bind(swiper),\n          update: Pagination.update.bind(swiper),\n          destroy: Pagination.destroy.bind(swiper),\n          dynamicBulletIndex: 0,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange() {\n        var swiper = this;\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange() {\n        var swiper = this;\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.pagination.destroy();\n      },\n      click: function click(e) {\n        var swiper = this;\n        if (\n          swiper.params.pagination.el\n          && swiper.params.pagination.hideOnClick\n          && swiper.pagination.$el.length > 0\n          && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n        ) {\n          var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n          if (isHidden === true) {\n            swiper.emit('paginationShow', swiper);\n          } else {\n            swiper.emit('paginationHide', swiper);\n          }\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      },\n    },\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var progress = swiper.progress;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n      if (rtl) {\n        newPos = -newPos;\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n      if (swiper.isHorizontal()) {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(\" + newPos + \"px, 0, 0)\"));\n        } else {\n          $dragEl.transform((\"translateX(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        if (Support.transforms3d) {\n          $dragEl.transform((\"translate3d(0px, \" + newPos + \"px, 0)\"));\n        } else {\n          $dragEl.transform((\"translateY(\" + newPos + \"px)\"));\n        }\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) { return; }\n\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl;\n      var $el = scrollbar.$el;\n\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n      if (swiper.params.scrollbar.hide) {\n        $el[0].style.opacity = 0;\n      }\n      Utils.extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize,\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el;\n      var dragSize = scrollbar.dragSize;\n      var trackSize = scrollbar.trackSize;\n\n      var pointerPosition;\n      if (swiper.isHorizontal()) {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n      } else {\n        pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n      }\n      var positionRatio;\n      positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      e.preventDefault();\n      e.stopPropagation();\n\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n\n      clearTimeout(swiper.scrollbar.dragTimeout);\n\n      $el.transition(0);\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar;\n      var $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      var $dragEl = scrollbar.$dragEl;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      if (e.preventDefault) { e.preventDefault(); }\n      else { e.returnValue = false; }\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar;\n      var $el = scrollbar.$el;\n\n      if (!swiper.scrollbar.isTouched) { return; }\n      swiper.scrollbar.isTouched = false;\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n      swiper.emit('scrollbarDragEnd', e);\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var touchEventsTouch = swiper.touchEventsTouch;\n      var touchEventsDesktop = swiper.touchEventsDesktop;\n      var params = swiper.params;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n      var passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      if (!Support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) { return; }\n      var scrollbar = swiper.scrollbar;\n      var $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n\n      var $el = $(params.el);\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find((\".\" + (swiper.params.scrollbar.dragClass)));\n      if ($dragEl.length === 0) {\n        $dragEl = $((\"<div class=\\\"\" + (swiper.params.scrollbar.dragClass) + \"\\\"></div>\"));\n        $el.append($dragEl);\n      }\n\n      Utils.extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0],\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    },\n  };\n\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        scrollbar: {\n          init: Scrollbar.init.bind(swiper),\n          destroy: Scrollbar.destroy.bind(swiper),\n          updateSize: Scrollbar.updateSize.bind(swiper),\n          setTranslate: Scrollbar.setTranslate.bind(swiper),\n          setTransition: Scrollbar.setTransition.bind(swiper),\n          enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n          disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n          setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n          onDragStart: Scrollbar.onDragStart.bind(swiper),\n          onDragMove: Scrollbar.onDragMove.bind(swiper),\n          onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null,\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.destroy();\n      },\n    },\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if ((x).indexOf('%') >= 0) {\n        x = (parseInt(x, 10) * progress * rtlFactor) + \"%\";\n      } else {\n        x = (x * progress * rtlFactor) + \"px\";\n      }\n      if ((y).indexOf('%') >= 0) {\n        y = (parseInt(y, 10) * progress) + \"%\";\n      } else {\n        y = (y * progress) + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n        $el[0].style.opacity = currentOpacity;\n      }\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px)\"));\n      } else {\n        var currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n        $el.transform((\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\"));\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      var progress = swiper.progress;\n      var snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n      slides.each(function (slideIndex, slideEl) {\n        var slideProgress = slideEl.progress;\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n        }\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n          .each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if ( duration === void 0 ) duration = this.params.speed;\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) { parallaxDuration = 0; }\n          $parallaxEl.transition(parallaxDuration);\n        });\n    },\n  };\n\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        parallax: {\n          setTransform: Parallax.setTransform.bind(swiper),\n          setTranslate: Parallax.setTranslate.bind(swiper),\n          setTransition: Parallax.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.parallax.enabled) { return; }\n        swiper.parallax.setTransition(duration);\n      },\n    },\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) { return 1; }\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt((Math.pow( (x2 - x1), 2 )) + (Math.pow( (y2 - y1), 2 )));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n      if (!Support.gestures) {\n        if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest('.swiper-slide');\n        if (gesture.$slideEl.length === 0) { gesture.$slideEl = swiper.slides.eq(swiper.activeIndex); }\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n      gesture.$imageEl.transition(0);\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n          return;\n        }\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (Support.gestures) {\n        zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n      }\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = (gesture.maxRatio - 1) + (Math.pow( ((zoom.scale - gesture.maxRatio) + 1), 0.5 ));\n      }\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = (params.minRatio + 1) - (Math.pow( ((params.minRatio - zoom.scale) + 1), 0.5 ));\n      }\n      gesture.$imageEl.transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (!Support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n        if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n          return;\n        }\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) { gesture.$slideEl = undefined; }\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (image.isTouched) { return; }\n      if (Device.android) { e.preventDefault(); }\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) { return; }\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      }\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) { return; }\n\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (\n          swiper.isHorizontal()\n          && (\n            (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n            || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        } if (\n          !swiper.isHorizontal()\n          && (\n            (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n            || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n          )\n        ) {\n          image.isTouched = false;\n          return;\n        }\n      }\n      e.preventDefault();\n      e.stopPropagation();\n\n      image.isMoved = true;\n      image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n      image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = (image.minX + 1) - (Math.pow( ((image.minX - image.currentX) + 1), 0.8 ));\n      }\n      if (image.currentX > image.maxX) {\n        image.currentX = (image.maxX - 1) + (Math.pow( ((image.currentX - image.maxX) + 1), 0.8 ));\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = (image.minY + 1) - (Math.pow( ((image.minY - image.currentY) + 1), 0.8 ));\n      }\n      if (image.currentY > image.maxY) {\n        image.currentY = (image.maxY - 1) + (Math.pow( ((image.currentY - image.maxY) + 1), 0.8 ));\n      }\n\n      // Velocity\n      if (!velocity.prevPositionX) { velocity.prevPositionX = image.touchesCurrent.x; }\n      if (!velocity.prevPositionY) { velocity.prevPositionY = image.touchesCurrent.y; }\n      if (!velocity.prevTime) { velocity.prevTime = Date.now(); }\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) { velocity.x = 0; }\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) { velocity.y = 0; }\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n\n      gesture.$imageWrapEl.transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n      var velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY;\n\n      // Fix duration\n      if (velocity.x !== 0) { momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x); }\n      if (velocity.y !== 0) { momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y); }\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n      image.currentX = newPositionX;\n      image.currentY = newPositionY;\n\n      // Define if we need image drag\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n      gesture.$imageWrapEl.transition(momentumDuration).transform((\"translate3d(\" + (image.currentX) + \"px, \" + (image.currentY) + \"px,0)\"));\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function in$1(e) {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n      var image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      gesture.$slideEl.addClass((\"\" + (params.zoomedSlideClass)));\n\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left;\n        offsetY = gesture.$slideEl.offset().top;\n        diffX = (offsetX + (slideWidth / 2)) - touchX;\n        diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n\n        translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n        translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n      gesture.$imageWrapEl.transition(300).transform((\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\"));\n      gesture.$imageEl.transition(300).transform((\"translate3d(0,0,0) scale(\" + (zoom.scale) + \")\"));\n    },\n    out: function out() {\n      var swiper = this;\n\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n        gesture.$imageWrapEl = gesture.$imageEl.parent((\".\" + (params.containerClass)));\n      }\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) { return; }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass((\"\" + (params.zoomedSlideClass)));\n      gesture.$slideEl = undefined;\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) { return; }\n      zoom.enabled = true;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.on(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) { return; }\n\n      swiper.zoom.enabled = false;\n\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n      // Scale image\n      if (Support.gestures) {\n        swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n\n      // Move image\n      swiper.$wrapperEl.off(swiper.touchEvents.move, (\".\" + (swiper.params.zoom.containerClass)), zoom.onTouchMove);\n    },\n  };\n\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      var zoom = {\n        enabled: false,\n        scale: 1,\n        currentScale: 1,\n        isScaling: false,\n        gesture: {\n          $slideEl: undefined,\n          slideWidth: undefined,\n          slideHeight: undefined,\n          $imageEl: undefined,\n          $imageWrapEl: undefined,\n          maxRatio: 3,\n        },\n        image: {\n          isTouched: undefined,\n          isMoved: undefined,\n          currentX: undefined,\n          currentY: undefined,\n          minX: undefined,\n          minY: undefined,\n          maxX: undefined,\n          maxY: undefined,\n          width: undefined,\n          height: undefined,\n          startX: undefined,\n          startY: undefined,\n          touchesStart: {},\n          touchesCurrent: {},\n        },\n        velocity: {\n          x: undefined,\n          y: undefined,\n          prevPositionX: undefined,\n          prevPositionY: undefined,\n          prevTime: undefined,\n        },\n      };\n\n      ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach(function (methodName) {\n        zoom[methodName] = Zoom[methodName].bind(swiper);\n      });\n      Utils.extend(swiper, {\n        zoom: zoom,\n      });\n\n      var scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get: function get() {\n          return scale;\n        },\n        set: function set(value) {\n          if (scale !== value) {\n            var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n            var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n            swiper.emit('zoomChange', value, imageEl, slideEl);\n          }\n          scale = value;\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(e) {\n        var swiper = this;\n        if (!swiper.zoom.enabled) { return; }\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(e) {\n        var swiper = this;\n        if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n    },\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if ( loadInDuplicate === void 0 ) loadInDuplicate = true;\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') { return; }\n      if (swiper.slides.length === 0) { return; }\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      var $slideEl = isVirtual\n        ? swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\"))\n        : swiper.slides.eq(index);\n\n      var $images = $slideEl.find((\".\" + (params.elementClass) + \":not(.\" + (params.loadedClass) + \"):not(.\" + (params.loadingClass) + \")\"));\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images = $images.add($slideEl[0]);\n      }\n      if ($images.length === 0) { return; }\n\n      $images.each(function (imageIndex, imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n\n        swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) { return; }\n          if (background) {\n            $imageEl.css('background-image', (\"url(\\\"\" + background + \"\\\")\"));\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find((\".\" + (params.preloaderClass))).remove();\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + (swiper.params.slideDuplicateClass) + \")\"));\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children((\".\" + (swiper.params.slideDuplicateClass) + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\"));\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        });\n\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperParams = swiper.params;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n\n      var slidesPerView = swiperParams.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children((\".\" + (swiperParams.slideClass) + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\")).length) {\n            return true;\n          }\n        } else if (slides[index]) { return true; }\n        return false;\n      }\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) { swiper.lazy.initialImageLoaded = true; }\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children((\".\" + (swiperParams.slideVisibleClass))).each(function (elIndex, slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) { swiper.lazy.loadInSlide(i); }\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n          // Next Slides\n          for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n            if (slideExist(i$1)) { swiper.lazy.loadInSlide(i$1); }\n          }\n          // Prev Slides\n          for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n            if (slideExist(i$2)) { swiper.lazy.loadInSlide(i$2); }\n          }\n        } else {\n          var nextSlide = $wrapperEl.children((\".\" + (swiperParams.slideNextClass)));\n          if (nextSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(nextSlide)); }\n\n          var prevSlide = $wrapperEl.children((\".\" + (swiperParams.slidePrevClass)));\n          if (prevSlide.length > 0) { swiper.lazy.loadInSlide(slideIndex(prevSlide)); }\n        }\n      }\n    },\n  };\n\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        lazy: {\n          initialImageLoaded: false,\n          load: Lazy.load.bind(swiper),\n          loadInSlide: Lazy.loadInSlide.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          swiper.lazy.load();\n        }\n      },\n      scroll: function scroll() {\n        var swiper = this;\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      scrollbarDragMove: function scrollbarDragMove() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n    },\n  };\n\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = (function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n          return maxIndex;\n        };\n      }());\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1;\n      // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) { return 0; }\n\n        // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1;\n\n        // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n        return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n      };\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop\n          ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n          : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(setTranslate$1, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c);\n          // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var i;\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n        if (duration !== 0) {\n          c.transitionStart();\n          if (c.params.autoHeight) {\n            Utils.nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) { return; }\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n            c.transitionEnd();\n          });\n        }\n      }\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    },\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide', // or 'container'\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        controller: {\n          control: swiper.params.controller.control,\n          getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n          setTranslate: Controller.setTranslate.bind(swiper),\n          setTransition: Controller.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      update: function update() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(translate, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        if (!swiper.controller.control) { return; }\n        swiper.controller.setTransition(duration, byController);\n      },\n    },\n  };\n\n  var a11y = {\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterKey: function onEnterKey(e) {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (e.keyCode !== 13) { return; }\n      var $targetEl = $(e.target);\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n      if (swiper.pagination && $targetEl.is((\".\" + (swiper.params.pagination.bulletClass)))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) { return; }\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n\n      if (swiper.params.loop) { return; }\n      var ref = swiper.navigation;\n      var $nextEl = ref.$nextEl;\n      var $prevEl = ref.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n        }\n      }\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n          swiper.a11y.addElRole($bulletEl, 'button');\n          swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n\n      swiper.$el.append(swiper.a11y.liveRegion);\n\n      // Navigation\n      var params = swiper.params.a11y;\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        swiper.a11y.makeElFocusable($nextEl);\n        swiper.a11y.addElRole($nextEl, 'button');\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        $nextEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        swiper.a11y.makeElFocusable($prevEl);\n        swiper.a11y.addElRole($prevEl, 'button');\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        $prevEl.on('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) { swiper.a11y.liveRegion.remove(); }\n\n      var $nextEl;\n      var $prevEl;\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterKey);\n      }\n\n      // Pagination\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', (\".\" + (swiper.params.pagination.bulletClass)), swiper.a11y.onEnterKey);\n      }\n    },\n  };\n  var A11y = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        a11y: {\n          liveRegion: $((\"<span class=\\\"\" + (swiper.params.a11y.notificationClass) + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")),\n        },\n      });\n      Object.keys(a11y).forEach(function (methodName) {\n        swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.a11y.enabled) { return; }\n        swiper.a11y.destroy();\n      },\n    },\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.history) { return; }\n      if (!win.history || !win.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues();\n      if (!history.paths.key && !history.paths.value) { return; }\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n      if (!swiper.params.history.replaceState) {\n        win.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (!swiper.params.history.replaceState) {\n        win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues();\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues() {\n      var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) { return part !== ''; });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return { key: key, value: value };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      if (!swiper.history.initialized || !swiper.params.history.enabled) { return; }\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n      if (!win.location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n      var currentState = win.history.state;\n      if (currentState && currentState.value === value) {\n        return;\n      }\n      if (swiper.params.history.replaceState) {\n        win.history.replaceState({ value: value }, null, value);\n      } else {\n        win.history.pushState({ value: value }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    },\n  };\n\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        replaceState: false,\n        key: 'slides',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        history: {\n          init: History.init.bind(swiper),\n          setHistory: History.setHistory.bind(swiper),\n          setHistoryPopState: History.setHistoryPopState.bind(swiper),\n          scrollToSlide: History.scrollToSlide.bind(swiper),\n          destroy: History.destroy.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n    },\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var newHash = doc.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children((\".\" + (swiper.params.slideClass) + \"[data-hash=\\\"\" + newHash + \"\\\"]\")).index();\n        if (typeof newIndex === 'undefined') { return; }\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) { return; }\n      if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n        win.history.replaceState(null, null, ((\"#\" + (swiper.slides.eq(swiper.activeIndex).attr('data-hash'))) || ''));\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        doc.location.hash = hash || '';\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) { return; }\n      swiper.hashNavigation.initialized = true;\n      var hash = doc.location.hash.replace('#', '');\n      if (hash) {\n        var speed = 0;\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.params.hashNavigation.watchState) {\n        $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        hashNavigation: {\n          initialized: false,\n          init: HashNavigation.init.bind(swiper),\n          destroy: HashNavigation.destroy.bind(swiper),\n          setHash: HashNavigation.setHash.bind(swiper),\n          onHashCange: HashNavigation.onHashCange.bind(swiper),\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd() {\n        var swiper = this;\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n    },\n  };\n\n  /* eslint no-underscore-dangle: \"off\" */\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n      swiper.autoplay.timeout = Utils.nextTick(function () {\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') { return false; }\n      if (swiper.autoplay.running) { return false; }\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return false; }\n      if (typeof swiper.autoplay.timeout === 'undefined') { return false; }\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) { return; }\n      if (swiper.autoplay.paused) { return; }\n      if (swiper.autoplay.timeout) { clearTimeout(swiper.autoplay.timeout); }\n      swiper.autoplay.paused = true;\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n  };\n\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        autoplay: {\n          running: false,\n          paused: false,\n          run: Autoplay.run.bind(swiper),\n          start: Autoplay.start.bind(swiper),\n          stop: Autoplay.stop.bind(swiper),\n          pause: Autoplay.pause.bind(swiper),\n          onTransitionEnd: function onTransitionEnd(e) {\n            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) { return; }\n            if (e.target !== this) { return; }\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n            swiper.autoplay.paused = false;\n            if (!swiper.autoplay.running) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.run();\n            }\n          },\n        },\n      });\n    },\n    on: {\n      init: function init() {\n        var swiper = this;\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n      },\n    },\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) { tx -= swiper.translate; }\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n        var slideOpacity = swiper.params.fadeEffect.crossFade\n          ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n          : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl\n          .css({\n            opacity: slideOpacity,\n          })\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        fadeEffect: {\n          setTranslate: Fade.setTranslate.bind(swiper),\n          setTransition: Fade.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"fade\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'fade') { return; }\n        swiper.fadeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slides = swiper.slides;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var rtl = swiper.rtlTranslate;\n      var swiperSize = swiper.size;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n          $cubeShadowEl.css({ height: (swiperWidth + \"px\") });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + (round * 4 * swiperSize);\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = (3 * swiperSize) + (swiperSize * 4 * round);\n        }\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = (slideIndex * 90) + (progress * 90);\n          if (rtl) { wrapperRotate = (-slideIndex * 90) - (progress * 90); }\n        }\n        $slideEl.transform(transform);\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n      }\n      $wrapperEl.css({\n        '-webkit-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-moz-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        '-ms-transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n        'transform-origin': (\"50% 50% -\" + (swiperSize / 2) + \"px\"),\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform((\"translate3d(0px, \" + ((swiperWidth / 2) + params.shadowOffset) + \"px, \" + (-swiperWidth / 2) + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + (params.shadowScale) + \")\"));\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n          var multiplier = 1.5 - (\n            (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n            + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n          );\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform((\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + ((swiperHeight / 2) + offset) + \"px, \" + (-swiperHeight / 2 / scale2) + \"px) rotateX(-90deg)\"));\n        }\n      }\n      var zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n      $wrapperEl\n        .transform((\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\"));\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el;\n      var slides = swiper.slides;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    },\n  };\n\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        cubeEffect: {\n          setTranslate: Cube.setTranslate.bind(swiper),\n          setTransition: Cube.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"cube\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'cube') { return; }\n        swiper.cubeEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if (shadowBefore.length === 0) {\n            shadowBefore = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append(shadowBefore);\n          }\n          if (shadowAfter.length === 0) {\n            shadowAfter = $((\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append(shadowAfter);\n          }\n          if (shadowBefore.length) { shadowBefore[0].style.opacity = Math.max(-progress, 0); }\n          if (shadowAfter.length) { shadowAfter[0].style.opacity = Math.max(progress, 0); }\n        }\n        $slideEl\n          .transform((\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\"));\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides;\n      var activeIndex = swiper.activeIndex;\n      var $wrapperEl = swiper.$wrapperEl;\n      slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        // eslint-disable-next-line\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) { return; }\n          if (!swiper || swiper.destroyed) { return; }\n          // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    },\n  };\n\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        flipEffect: {\n          setTranslate: Flip.setTranslate.bind(swiper),\n          setTransition: Flip.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"flip\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true,\n        };\n        Utils.extend(swiper.params, overwriteParams);\n        Utils.extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'flip') { return; }\n        swiper.flipEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width;\n      var swiperHeight = swiper.height;\n      var slides = swiper.slides;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth;\n      // Each slide offset from center\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n        // var rotateZ = 0\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n\n        var translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n        var translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n        // Fix for ultra small values\n        if (Math.abs(translateX) < 0.001) { translateX = 0; }\n        if (Math.abs(translateY) < 0.001) { translateY = 0; }\n        if (Math.abs(translateZ) < 0.001) { translateZ = 0; }\n        if (Math.abs(rotateY) < 0.001) { rotateY = 0; }\n        if (Math.abs(rotateX) < 0.001) { rotateX = 0; }\n\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\"));\n            $slideEl.append($shadowBeforeEl);\n          }\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $((\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\"));\n            $slideEl.append($shadowAfterEl);\n          }\n          if ($shadowBeforeEl.length) { $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0; }\n          if ($shadowAfterEl.length) { $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0; }\n        }\n      }\n\n      // Set correct perspective for IE10\n      if (Support.pointerEvents || Support.prefixedPointerEvents) {\n        var ws = $wrapperEl[0].style;\n        ws.perspectiveOrigin = center + \"px 50%\";\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides\n        .transition(duration)\n        .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n        .transition(duration);\n    },\n  };\n\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        modifier: 1,\n        slideShadows: true,\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        coverflowEffect: {\n          setTranslate: Coverflow.setTranslate.bind(swiper),\n          setTransition: Coverflow.setTransition.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"coverflow\"));\n        swiper.classNames.push(((swiper.params.containerModifierClass) + \"3d\"));\n\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (swiper.params.effect !== 'coverflow') { return; }\n        swiper.coverflowEffect.setTransition(duration);\n      },\n    },\n  };\n\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var ref = swiper.params;\n      var thumbsParams = ref.thumbs;\n      var SwiperClass = swiper.constructor;\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        Utils.extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n        Utils.extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        });\n      } else if (Utils.isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false,\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) { return; }\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) { return; }\n      var slideToIndex;\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix();\n          // eslint-disable-next-line\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\")).eq(0).index();\n        if (typeof prevIndex === 'undefined') { slideToIndex = nextIndex; }\n        else if (typeof nextIndex === 'undefined') { slideToIndex = prevIndex; }\n        else if (nextIndex - currentIndex < currentIndex - prevIndex) { slideToIndex = nextIndex; }\n        else { slideToIndex = prevIndex; }\n      }\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) { return; }\n\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n        ? thumbsSwiper.slidesPerViewDynamic()\n        : thumbsSwiper.params.slidesPerView;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix();\n            // eslint-disable-next-line\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          }\n          // Find actual thumbs index to slide to\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex) + \"\\\"]\")).eq(0).index();\n          if (typeof prevThumbsIndex === 'undefined') { newThumbsIndex = nextThumbsIndex; }\n          else if (typeof nextThumbsIndex === 'undefined') { newThumbsIndex = prevThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = currentThumbsIndex; }\n          else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) { newThumbsIndex = nextThumbsIndex; }\n          else { newThumbsIndex = prevThumbsIndex; }\n        } else {\n          newThumbsIndex = swiper.realIndex;\n        }\n        if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n          }\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      }\n\n      // Activate thumbs\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n      if (thumbsSwiper.params.loop) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children((\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\")).addClass(thumbActiveClass);\n        }\n      } else {\n        for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);\n        }\n      }\n    },\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        swiper: null,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs',\n      },\n    },\n    create: function create() {\n      var swiper = this;\n      Utils.extend(swiper, {\n        thumbs: {\n          swiper: null,\n          init: Thumbs.init.bind(swiper),\n          update: Thumbs.update.bind(swiper),\n          onThumbClick: Thumbs.onThumbClick.bind(swiper),\n        },\n      });\n    },\n    on: {\n      beforeInit: function beforeInit() {\n        var swiper = this;\n        var ref = swiper.params;\n        var thumbs = ref.thumbs;\n        if (!thumbs || !thumbs.swiper) { return; }\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      update: function update() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      resize: function resize() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate() {\n        var swiper = this;\n        if (!swiper.thumbs.swiper) { return; }\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy() {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) { return; }\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      },\n    },\n  };\n\n  // Swiper Class\n\n  var components = [\n    Device$1,\n    Support$1,\n    Browser$1,\n    Resize,\n    Observer$1,\n    Virtual$1,\n    Keyboard$1,\n    Mousewheel$1,\n    Navigation$1,\n    Pagination$1,\n    Scrollbar$1,\n    Parallax$1,\n    Zoom$1,\n    Lazy$1,\n    Controller$1,\n    A11y,\n    History$1,\n    HashNavigation$1,\n    Autoplay$1,\n    EffectFade,\n    EffectCube,\n    EffectFlip,\n    EffectCoverflow,\n    Thumbs$1\n  ];\n\n  if (typeof Swiper.use === 'undefined') {\n    Swiper.use = Swiper.Class.use;\n    Swiper.installModule = Swiper.Class.installModule;\n  }\n\n  Swiper.use(components);\n\n  return Swiper;\n\n}));\n"]}